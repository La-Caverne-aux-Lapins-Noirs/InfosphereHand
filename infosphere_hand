#!/usr/bin/php
<?php
/*
** Jason Brillante "Damdoshi"
** Hanged Bunny Studio 2014-2021
** EFRITS SAS 2022
** Pentacle Technologie 2008-2022
**
** I HIT NFS:
** Infosphere Hand In The Network File System
**
** Ce logiciel est conçu pour être utilisé comme shell
** de reception par sshd pour un utilisateur consacré.
*/

function wjson($cmd, $exit = -1)
{
    echo json_encode($cmd, JSON_UNESCAPED_SLASHES);
    if ($exit != -1)
	exit($exit);
}

$LOGS = sys_get_temp_dir()."/infosphere_hand.log";

// On récupère ce qui est envoyé par le client par SSH.
$input = [];
while (($data = fread(STDIN, 1024)))
{
    if (trim($data) == "stop")
	exit(0);
    $input = json_decode($data, true);

    if (!isset($input["command"]))
    {  
	wjson(["result" => "ko", "message" => "no command specified"]);
	continue ;
    }		

    if ($input["command"] == "log")
    {
	if (file_exists($LOGS) && filesize($LOGS) > 1024 * 1024 * 16) // 16Mo
	    wjson(["result" => "ko", "message" => "logfile is full"]);
	// Les machines du réseau mettent au courant InfosphereHand de l'actu
	foreach (($fld = ["mac", "name", "date", "lock", "users"]) as $elm)
	    if (!isset($input[$elm]))
		wjson(["result" => "ko", "message" => "field $elm is missing"], 1);
	if (count($fld) + 1 != count($input))
	    wjson(["result" => "ko", "message" => "too many fields"]);
	if (!is_array($input["users"]))
	    $input["users"] = [$input["users"]];
	foreach ($input["users"] as $user)
	    if (!preg_match('/[a-zA-Z\.]+/', $user))
		wjson(["result" => "ko", "message" => "$user is not a valid username"], 1);

	$data = [
	    "mac" => $input["mac"], // Adresse MAC de la machine
	    "name" => $input["name"], // Nom de la machine
	    "date" => $input["date"], // Date de l'émission originale
	    "lock" => $input["lock"], // Est ce que le poste est verrouillé ou non?
	];
	foreach ($input["users"] as $user)
	    file_put_contents($LOGS, json_encode(array_merge($data, ["login" => $user]), JSON_UNESCAPED_SLASHES)."\n", FILE_APPEND);
	wjson(["result" => "ok"]);
    }
    else if ($input["command"] == "getlog")
    {
	// Infosphère vient régulièrement chercher les logs avec Albedo
	$logs = file_get_contents($LOGS);
	unlink($LOGS);
	$logs = explode("\n", $logs);
	$nlogs = [];
	foreach ($logs as $log)
	{
	    if (!strlen(trim($log)))
		continue ;
	    $nlogs[] = json_decode($log, true);
	}
	wjson(["result" => "ok", "content" => $nlogs]);
    }
    else if ($input["command"] == "getwork")
    {
	// Cette commande est censée être utilisée par l'Intranet.

	foreach (($fld = ["users", "target"]) as $elm)
	    if (!isset($input[$elm]))
		wjson(["result" => "ko", "message" => "field $elm is missing"], 1);
	if (!preg_match('/[a-zA-Z\.\-_\/0-9]+/', $input["target"]))
	    wjson(["result" => "ko", "message" => "{$input["target"]} is not a valid directory"], 1);
	foreach ($input["users"] as $trg)
	    if (!preg_match('/[a-zA-Z\.]+/', $trg))
		wjson(["result" => "ko", "message" => "$trg is not a valid username"], 1);
	$source = "/home/users/";
	$target = sys_get_temp_dir()."/".uniqid();
	if (mkdir($target, 0777, true) === false)
	    wjson(["result" => "ko", "message" => "cannot create directory $target"], 1);
	$lst = [];
	foreach ($input["users"] as $trg)
	{
	    $src = $source.$trg."/".$input["target"];
	    if (!file_exists($src))
		continue ;
	    $dir = $target."/".$trg;
	    system("cp -r $src $dir");
	    $lst[] = substr($dir, strlen($target) + 1);
	}
	$collection = implode(" ", $lst);
	$targetfile = $target."/work.tar.gz";
	system($cmd = "(cd $target && tar cfz work.tar.gz $collection)");
	$archive = file_get_contents($targetfile);
	wjson(["result" => "ok", "content" => base64_encode($archive)]);
	unlink($targetfile);
	system("rm -rf $target");
    }
    else if ($input["command"] == "run")
    {
	foreach (($fld = ["users", "target", "archive"]) as $elm)
	    if (!isset($input[$elm]))
		wjson(["result" => "ko", "message" => "field $elm is missing"], 1);
	foreach ($input["users"] as $trg)
	    if (!preg_match('/[a-zA-Z\.\-_\/0-9]+/', $trg))
		wjson(["result" => "ko", "message" => "$trg is not a valid username"], 1);
	if (!preg_match('/[a-zA-Z\.\-_\/0-9]+/', $input["target"]))
	    wjson(["result" => "ko", "message" => "{$input["target"]} is not a valid directory"], 1);
	$source = $input["target"];
	
	if (($input["archive"] = base64_decode($input["archive"])) == false)
	    wjson(["result" => "ko", "message" => "cannot decode archive from b64"]);
	$target = sys_get_temp_dir()."/".uniqid()."/";
	if (file_put_contents($target."program.tar.gz", $input["archive"]) === false)
	    wjson(["result" => "ko", "message" => "cannot write archive to disk"]);

	$response = [];
	foreach ($input["users"] as $student)
	{
	    $src = "/home/users/$student/$source";
	    $dir = $target.$student;
	    ob_start();
    	    system(
		"cp -r $src $dir ; ".
		"(cd $dir && ".
		"tar xvfz ../program.tar.gz >& /dev/null && ".
		"./evaluate)"
	    );
	    $response[] = [
		"login" => $student,
		// Pas sur que ca soit la bonne méthode
		// Il faudrait voir avec crawler et evaluator.
		"trace" => ob_get_clean(),
	    ];
	}
	system("rm -rf $target");
	wjson(["result" => "ok", "content" => $response]);
    }
    else if ($input["command"] == "newuser")
    {
	// Conf fluxbox + conf bash
    }
}
